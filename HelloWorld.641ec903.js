function e(e){return e&&e.__esModule?e.default:e}var o=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequired7a6;o.register("1RTTa",(function(r,n){var t,i,a,c,l;t=r.exports,Object.defineProperty(t,"__esModule",{value:!0,configurable:!0}),i=r.exports,a="default",c=function(){return h},Object.defineProperty(i,a,{get:c,set:l,enumerable:!0,configurable:!0});var s=o("4sdSv"),u=o("39Sww"),f=o("2mQBY"),v=o("fPhPQ"),d=o("b6ZU0");const g=new(e(o("labVS")))({pos:{x:0,y:0},width:50,height:50,color:[Math.random(),Math.random(),Math.random(),1]}),m=({canvas:o,container:r})=>{const n=o.getContext("webgl2"),t=f.webglUtils.createProgramFromSources(n,[e(v),e(d)]),i=n.getAttribLocation(t,"position"),a=n.getUniformLocation(t,"u_resolution"),c=n.getUniformLocation(t,"u_color"),l=n.createBuffer(),s=n.createVertexArray();n.bindVertexArray(s),n.enableVertexAttribArray(i),n.bindBuffer(n.ARRAY_BUFFER,l),n.vertexAttribPointer(i,2,n.FLOAT,!1,0,0);const u=({pos:e,width:o,height:r,color:i})=>{f.webglUtils.resizeCanvasToDisplaySize(n.canvas),n.viewport(0,0,n.canvas.width,n.canvas.height),n.clearColor(0,0,0,1),n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT),n.useProgram(t),n.bindVertexArray(s),n.uniform2f(a,n.canvas.width,n.canvas.height),n.bindBuffer(n.ARRAY_BUFFER,l);const u=e.x,v=u+o,d=e.y,g=d+r,m=[u,d,v,d,u,g,u,g,v,d,v,g];n.bufferData(n.ARRAY_BUFFER,new Float32Array(m),n.STATIC_DRAW),n.uniform4fv(c,i);const h=n.TRIANGLES;n.drawArrays(h,0,6)};g.on("update",(()=>u(g.toJSON()))),u(g.toJSON()),setInterval((()=>u(g.toJSON())),3e3)};var h=()=>(e(u).useEffect((()=>{const e=document.querySelector("canvas"),o=document.querySelector("#container");if(m){const r=m({canvas:e,container:o});return()=>{"function"==typeof r&&r()}}})),(0,s.jsx)(s.Fragment,{children:(0,s.jsx)("div",{id:"container",children:(0,s.jsx)("canvas",{})})}))})),o.register("2mQBY",(function(e,o){var r,n;r=e.exports,n=function(){const e=this;var o;function r(o){e.console&&(e.console.error?e.console.error(o):e.console.log&&e.console.log(o))}function n(e,o,n,t){const i=t||r,a=e.createShader(n);return e.shaderSource(a,o),e.compileShader(a),e.getShaderParameter(a,e.COMPILE_STATUS)?a:(i("*** Error compiling shader '"+a+"':"+e.getShaderInfoLog(a)),e.deleteShader(a),null)}function t(e,o,n,t,i){const a=i||r,c=e.createProgram();return o.forEach((function(o){e.attachShader(c,o)})),n&&n.forEach((function(o,r){e.bindAttribLocation(c,t?t[r]:r,o)})),e.linkProgram(c),e.getProgramParameter(c,e.LINK_STATUS)?c:(a("Error in program linking:"+e.getProgramInfoLog(c)),e.deleteProgram(c),null)}function i(e,o,r,t){let i,a="";const c=document.getElementById(o);if(!c)throw"*** Error: unknown script element"+o;if(a=c.text,!r)if("x-shader/x-vertex"===c.type)i=e.VERTEX_SHADER;else if("x-shader/x-fragment"===c.type)i=e.FRAGMENT_SHADER;else if(i!==e.VERTEX_SHADER&&i!==e.FRAGMENT_SHADER)throw"*** Error: unknown shader type";return n(e,a,r||i,t)}(o=o||e)===o.top&&(console.log("%c%s","color:blue;font-weight:bold;","for more about webgl-utils.js see:"),console.log("%c%s","color:blue;font-weight:bold;","http://webgl2fundamentals.org/webgl/lessons/webgl-boilerplate.html"));const a=["VERTEX_SHADER","FRAGMENT_SHADER"];return{createProgram:t,createProgramFromScripts:function(e,o,r,n,c){const l=[];for(let r=0;r<o.length;++r)l.push(i(e,o[r],e[a[r]],c));return t(e,l,r,n,c)},createProgramFromSources:function(e,o,r,i,c){const l=[];for(let r=0;r<o.length;++r)l.push(n(e,o[r],e[a[r]],c));return t(e,l,r,i,c)},resizeCanvasToDisplaySize:function(e,o){o=o||1;const r=e.clientWidth*o|0,n=e.clientHeight*o|0;return(e.width!==r||e.height!==n)&&(e.width=r,e.height=n,!0)}}},"function"==typeof define&&define.amd?define([],(function(){return n.call(r)})):r.webglUtils=n.call(r)})),o.register("fPhPQ",(function(e,o){e.exports="#define GLSLIFY 1\nuniform mat4 u_worldViewProjection;\nuniform vec3 u_lightWorldPos;\nuniform mat4 u_world;\nuniform mat4 u_viewInverse;\nuniform mat4 u_worldInverseTranspose;\nattribute vec4 position;\nattribute vec3 normal;\nattribute vec2 texcoord;\nvarying vec4 v_position;\nvarying vec2 v_texCoord;\nvarying vec3 v_normal;\nvarying vec3 v_surfaceToLight;\nvarying vec3 v_surfaceToView;\nvoid main() {\n  v_texCoord = texcoord;\n  v_position = u_worldViewProjection * position;\n  v_normal = (u_worldInverseTranspose * vec4(normal, 0)).xyz;\n  v_surfaceToLight = u_lightWorldPos - (u_world * position).xyz;\n  v_surfaceToView = (u_viewInverse[3] - (u_world * position)).xyz;\n  gl_Position = v_position;\n}\n"})),o.register("b6ZU0",(function(e,o){e.exports="precision mediump float;\n#define GLSLIFY 1\nvarying vec4 v_position;\nvarying vec2 v_texCoord;\nvarying vec3 v_normal;\nvarying vec3 v_surfaceToLight;\nvarying vec3 v_surfaceToView;\nuniform vec4 u_lightColor;\nuniform vec4 u_ambient;\nuniform sampler2D u_diffuse;\nuniform vec4 u_specular;\nuniform float u_shininess;\nuniform float u_specularFactor;\nvec4 lit(float l ,float h, float m) {\n  return vec4(1.0,\n              max(l, 0.0),\n              (l > 0.0) ? pow(max(0.0, h), m) : 0.0,\n              1.0);\n}\nvoid main() {\n  vec4 diffuseColor = texture2D(u_diffuse, v_texCoord);\n  vec3 a_normal = normalize(v_normal);\n  vec3 surfaceToLight = normalize(v_surfaceToLight);\n  vec3 surfaceToView = normalize(v_surfaceToView);\n  vec3 halfVector = normalize(surfaceToLight + surfaceToView);\n  vec4 litR = lit(dot(a_normal, surfaceToLight),\n                  dot(a_normal, halfVector), u_shininess);\n\n  vec4 outColor = vec4((\n    u_lightColor * (diffuseColor * litR.y + diffuseColor * u_ambient +\n                    u_specular * litR.z * u_specularFactor)).rgb,\n    diffuseColor.a);\n\n  gl_FragColor = vec4(1.0,1.0,1.0,1.0);\n}\n"}));
//# sourceMappingURL=HelloWorld.641ec903.js.map
